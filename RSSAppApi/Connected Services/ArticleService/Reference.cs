//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RSSAppApi.ArticleService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Article", Namespace="http://schemas.datacontract.org/2004/07/RSSBackgroundWorkerBusinessWCF.Messages")]
    [System.SerializableAttribute()]
    public partial class Article : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChannelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((this.ChannelIdField.Equals(value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PubDate {
            get {
                return this.PubDateField;
            }
            set {
                if ((this.PubDateField.Equals(value) != true)) {
                    this.PubDateField = value;
                    this.RaisePropertyChanged("PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleMessage", Namespace="http://schemas.datacontract.org/2004/07/RSSBackgroundWorkerBusinessWCF.Messages")]
    [System.SerializableAttribute()]
    public partial class ArticleMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RSSAppApi.ArticleService.Article MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RSSAppApi.ArticleService.MessageStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RSSAppApi.ArticleService.Article Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RSSAppApi.ArticleService.MessageStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageStatus", Namespace="http://schemas.datacontract.org/2004/07/RSSBackgroundWorkerBusinessWCF.Messages")]
    public enum MessageStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Updated = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NothingModified = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ArticleService.IArticleService")]
    public interface IArticleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticles", ReplyAction="http://tempuri.org/IArticleService/GetArticlesResponse")]
        RSSAppApi.ArticleService.Article[] GetArticles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticles", ReplyAction="http://tempuri.org/IArticleService/GetArticlesResponse")]
        System.Threading.Tasks.Task<RSSAppApi.ArticleService.Article[]> GetArticlesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticle", ReplyAction="http://tempuri.org/IArticleService/GetArticleResponse")]
        RSSAppApi.ArticleService.Article GetArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/GetArticle", ReplyAction="http://tempuri.org/IArticleService/GetArticleResponse")]
        System.Threading.Tasks.Task<RSSAppApi.ArticleService.Article> GetArticleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        RSSAppApi.ArticleService.ArticleMessage AddArticle(RSSAppApi.ArticleService.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/AddArticle", ReplyAction="http://tempuri.org/IArticleService/AddArticleResponse")]
        System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> AddArticleAsync(RSSAppApi.ArticleService.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/UpdateArticle", ReplyAction="http://tempuri.org/IArticleService/UpdateArticleResponse")]
        RSSAppApi.ArticleService.ArticleMessage UpdateArticle(RSSAppApi.ArticleService.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/UpdateArticle", ReplyAction="http://tempuri.org/IArticleService/UpdateArticleResponse")]
        System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> UpdateArticleAsync(RSSAppApi.ArticleService.Article article);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/DeleteArticle", ReplyAction="http://tempuri.org/IArticleService/DeleteArticleResponse")]
        RSSAppApi.ArticleService.ArticleMessage DeleteArticle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArticleService/DeleteArticle", ReplyAction="http://tempuri.org/IArticleService/DeleteArticleResponse")]
        System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> DeleteArticleAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArticleServiceChannel : RSSAppApi.ArticleService.IArticleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArticleServiceClient : System.ServiceModel.ClientBase<RSSAppApi.ArticleService.IArticleService>, RSSAppApi.ArticleService.IArticleService {
        
        public ArticleServiceClient() {
        }
        
        public ArticleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArticleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RSSAppApi.ArticleService.Article[] GetArticles() {
            return base.Channel.GetArticles();
        }
        
        public System.Threading.Tasks.Task<RSSAppApi.ArticleService.Article[]> GetArticlesAsync() {
            return base.Channel.GetArticlesAsync();
        }
        
        public RSSAppApi.ArticleService.Article GetArticle(int id) {
            return base.Channel.GetArticle(id);
        }
        
        public System.Threading.Tasks.Task<RSSAppApi.ArticleService.Article> GetArticleAsync(int id) {
            return base.Channel.GetArticleAsync(id);
        }
        
        public RSSAppApi.ArticleService.ArticleMessage AddArticle(RSSAppApi.ArticleService.Article article) {
            return base.Channel.AddArticle(article);
        }
        
        public System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> AddArticleAsync(RSSAppApi.ArticleService.Article article) {
            return base.Channel.AddArticleAsync(article);
        }
        
        public RSSAppApi.ArticleService.ArticleMessage UpdateArticle(RSSAppApi.ArticleService.Article article) {
            return base.Channel.UpdateArticle(article);
        }
        
        public System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> UpdateArticleAsync(RSSAppApi.ArticleService.Article article) {
            return base.Channel.UpdateArticleAsync(article);
        }
        
        public RSSAppApi.ArticleService.ArticleMessage DeleteArticle(int id) {
            return base.Channel.DeleteArticle(id);
        }
        
        public System.Threading.Tasks.Task<RSSAppApi.ArticleService.ArticleMessage> DeleteArticleAsync(int id) {
            return base.Channel.DeleteArticleAsync(id);
        }
    }
}
